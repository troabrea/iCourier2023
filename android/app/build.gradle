def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    signingConfigs {
        legacy {
            storeFile file("/Users/temis/Projects/Flutter/iCourierApps_PlaySignKey/android.keystore")
            storePassword "Msaxapta0201"
            keyAlias "android"
            keyPassword "Msaxapta0201"
        }
        recent {
            storeFile file("/Users/temis/Projects/Flutter/iCourierApps_PlaySignKey/AndroidKey.keystore")
            storePassword "Msaxapta0201"
            keyAlias "androidkey"
            keyPassword "Msaxapta0201"
        }
        release {
            storeFile file("/Users/temis/Projects/Flutter/iCourierApps_PlaySignKey/upload-keystore.jks")
            storePassword "Msaxapta0201"
            keyAlias "upload"
            keyPassword "Msaxapta0201"
        }
        codemagic {
            if (System.getenv()["CI"]) {
                storeFile = file(System.getenv()["CM_KEYSTORE_PATH"])
                storePassword = System.getenv()["CM_KEYSTORE_PASSWORD"]
                keyAlias = System.getenv()["CM_KEY_ALIAS"]
                keyPassword = System.getenv()["CM_KEY_PASSWORD"]
            } else {
                storeFile file("/Users/temis/Projects/Flutter/iCourierApps_PlaySignKey/android.keystore")
                storePassword "Msaxapta0201"
                keyAlias "android"
                keyPassword "Msaxapta0201"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.barolit.icourier"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    flavorDimensions "app"

    productFlavors {
        domex {
            dimension "app"
            applicationId "com.barolit.domex"
            versionCode 5202326
        }
        bmcargo {
            dimension "app"
            applicationId "com.barolit.bmcargo"
            versionCode 5202327
        }
        jetpack {
            dimension "app"
            applicationId "com.barolit.jetpack"
            versionCode 5202324
        }
        almapaq {
            dimension "app"
            applicationId "com.barolit.almapaq"
            versionCode 5202322
        }
        beexpress {
            dimension "app"
            applicationId "com.barolit.beexpress"
            versionCode 5202322
        }
        boxpaq {
            dimension "app"
            applicationId "com.barolit.boxpaq"
            versionCode 5202322
        }
        encargopaq {
            dimension "app"
            applicationId "com.barolit.encargopaq"
            versionCode 5202322
        }
        pintopaq {
            dimension "app"
            applicationId "com.barolit.pintopaq"
            versionCode 5202324
        }
        caribepack {
            dimension "app"
            applicationId "com.barolit.caribepackapp"
        }
        cps {
            dimension "app"
            applicationId "com.barolit.cps"
        }
        taino {
            dimension "app"
            applicationId "com.barolit.taino"
            versionCode 520246
        }
        fixocargo {
            dimension "app"
            applicationId "com.barolit.fixocargo"
            versionCode 5202325
        }
        picknsend {
            dimension "app"
            applicationId "com.barolit.picknsend"
            versionCode 5202323
        }
    }

    buildTypes {
        release {
            //signingConfig signingConfigs.codemagic
            signingConfig signingConfigs.release
//            signingConfig signingConfigs.recent
//            signingConfig signingConfigs.legacy
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:30.3.2')
}
